using System.Collections.Generic;

namespace BindingIntegrationTests
{
	public class JavaSource
	{
		public string FileName { get; set; }
		public string Content { get; set; }
	}

	public class BindingProject
	{
		public string Id { get; set; }

		// initial inputs
		public IList<string> JavaSourceFiles { get; set; } = new List<string> ();
		public IList<JavaSource> JavaSourceStrings { get; set; } = new List<JavaSource> ();
		public string JavacOptions { get; set; } = "-g";
		// rt.jar, android.jar etc.
		// If it is specified, then javac will run with -bootclasspath and -cp
		public string CustomRuntimeJar { get; set; }

		public IList<string> ApiXmlFiles { get; set; } = new List<string> ();
		public IList<string> MetadataXmlFiles { get; set; } = new List<string> ();
		//public IList<string> MetadataXmlStrings { get; set; }
		public IList<string> InputJarFiles { get; set; } = new List<string> ();
		public IList<string> ReferenceJarFiles { get; set; } = new List<string> ();
		public IList<string> CSharpSourceFiles { get; set; } = new List<string> ();
		//public IList<string> CSharpSourceStrings { get; set; } = new List<string> ();
		public IList<string> ReferenceDlls { get; set; } = new List<string> ();

		public string JavacExecutionOutput { get; internal set; }
		// Java classes directory generated by javac (Javac() method)
		public string CompiledClassesDirectory { get; set; }

		public string JarExecutionOutput { get; internal set; }
		// Java libraries archived by jar
		public string CompiledJarFile { get; internal set; }

		// API XML description generated by class-parse
		public string GeneratedClassParseXmlFile { get; internal set; }
		// API XML description generated by api-xml-adjuster
		public string GeneratedApiXmlFile { get; internal set; }

		// C# sources generated by generator
		public IList<string> GeneratedCSharpSourceFiles { get; internal set; }
		// DLL built by C# compiler
		public string GeneratedDllFile { get; internal set; }
	}
}